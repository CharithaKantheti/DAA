#include <stdio.h>
#include <stdlib.h>

#define SIZE 10

typedef struct Node {
    int data;
    struct Node* next;
} Node;

int main() {
    Node* hashTable[SIZE] = {NULL};
    int choice, key, i;

    while (1) {
        printf("\n1.Insert 2.Search 3.Delete 4.Display 5.Exit\nChoice: ");
        scanf("%d", &choice);
        if (choice == 5)
            break;

        if (choice == 4) {
            for (i = 0; i < SIZE; i++) {
                printf("%d:", i);
                Node* temp = hashTable[i];
                while (temp) {
                    printf(" %d->", temp->data);
                    temp = temp->next;
                }
                printf(" NULL\n");
            }
            continue;
        }

        printf("Enter key: ");
        scanf("%d", &key);
        int index = key % SIZE;

        if (choice == 1) {
            Node* newNode = (Node*)malloc(sizeof(Node));
            newNode->data = key;
            newNode->next = NULL;
            if (hashTable[index] == NULL) {
                hashTable[index] = newNode;
            } else {
                Node* temp = hashTable[index];
                while (temp->next)
                    temp = temp->next;
                temp->next = newNode;
            }
            printf("Inserted %d\n", key);
        } 
        else if (choice == 2) {
            Node* temp = hashTable[index];
            int found = 0;
            while (temp) {
                if (temp->data == key) {
                    found = 1;
                    break;
                }
                temp = temp->next;
            }
            if (found)
                printf("%d found at index %d\n", key, index);
            else
                printf("%d not found\n", key);
        } 
        else if (choice == 3) {
            Node* temp = hashTable[index];
            Node* prev = NULL;
            int found = 0;
            while (temp) {
                if (temp->data == key) {
                    found = 1;
                    if (prev == NULL)
                        hashTable[index] = temp->next;
                    else
                        prev->next = temp->next;
                    free(temp);
                    printf("Deleted %d\n", key);
                    break;
                }
                prev = temp;
                temp = temp->next;
            }
            if (!found)
                printf("%d not found\n", key);
        } 
        else {
            printf("Invalid choice\n");
        }
    }

    return 0;
}
